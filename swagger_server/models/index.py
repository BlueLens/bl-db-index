# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Index(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, index_id: int=None, object_id: str=None, product_id: str=None, feature_vector: List[float]=None):
        """
        Index - a model defined in Swagger

        :param index_id: The index_id of this Index.
        :type index_id: int
        :param object_id: The object_id of this Index.
        :type object_id: str
        :param product_id: The product_id of this Index.
        :type product_id: str
        :param feature_vector: The feature_vector of this Index.
        :type feature_vector: List[float]
        """
        self.swagger_types = {
            'index_id': int,
            'object_id': str,
            'product_id': str,
            'feature_vector': List[float]
        }

        self.attribute_map = {
            'index_id': 'index_id',
            'object_id': 'object_id',
            'product_id': 'product_id',
            'feature_vector': 'feature_vector'
        }

        self._index_id = index_id
        self._object_id = object_id
        self._product_id = product_id
        self._feature_vector = feature_vector

    @classmethod
    def from_dict(cls, dikt) -> 'Index':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Index of this Index.
        :rtype: Index
        """
        return deserialize_model(dikt, cls)

    @property
    def index_id(self) -> int:
        """
        Gets the index_id of this Index.

        :return: The index_id of this Index.
        :rtype: int
        """
        return self._index_id

    @index_id.setter
    def index_id(self, index_id: int):
        """
        Sets the index_id of this Index.

        :param index_id: The index_id of this Index.
        :type index_id: int
        """

        self._index_id = index_id

    @property
    def object_id(self) -> str:
        """
        Gets the object_id of this Index.

        :return: The object_id of this Index.
        :rtype: str
        """
        return self._object_id

    @object_id.setter
    def object_id(self, object_id: str):
        """
        Sets the object_id of this Index.

        :param object_id: The object_id of this Index.
        :type object_id: str
        """

        self._object_id = object_id

    @property
    def product_id(self) -> str:
        """
        Gets the product_id of this Index.

        :return: The product_id of this Index.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id: str):
        """
        Sets the product_id of this Index.

        :param product_id: The product_id of this Index.
        :type product_id: str
        """

        self._product_id = product_id

    @property
    def feature_vector(self) -> List[float]:
        """
        Gets the feature_vector of this Index.

        :return: The feature_vector of this Index.
        :rtype: List[float]
        """
        return self._feature_vector

    @feature_vector.setter
    def feature_vector(self, feature_vector: List[float]):
        """
        Sets the feature_vector of this Index.

        :param feature_vector: The feature_vector of this Index.
        :type feature_vector: List[float]
        """

        self._feature_vector = feature_vector

